openapi: 3.0.0
info:
  description: |
    This is an accounting server.
  version: "1.0.0"
  title: Accounting
tags:
  - name: transactions
  - name: accounts
  - name: balances
paths:
  '/transactions':
    post:
      operationId: transactions.create
      tags: [transactions]
      summary: Create a transaction
      requestBody:
        $ref: '#/components/requestBodies/transaction'
      responses:
        '201':
          $ref: '#/components/responses/created'
    get:
      operationId: transactions.find_all
      tags: [transactions]
      summary: Returns all transactions
      parameters:
        - name: after
          in: query
          description: Only return transactions after this date
          schema: {type: string, format: date}
        - name: before
          in: query
          description: Only return transactions before this date
          schema: {type: string, format: date}
      responses:
        '200':
          $ref: '#/components/responses/transactions'
  '/transactions/{transactionId}':
    get:
      operationId: transactions.find_by_id
      tags: [transactions]
      summary: Finds a transaction by id
      parameters:
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          schema: {type: integer}
      responses:
        '200':
          $ref: '#/components/responses/transaction'
    put:
      operationId: transactions.update
      tags: [transactions]
      summary: Updates a transaction
      parameters:
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          schema: {type: integer}
      responses:
        '200':
          description: Updated
      requestBody:
        $ref: '#/components/requestBodies/transaction'
    delete:
      operationId: transactions.delete
      tags: [transactions]
      summary: Updates a transaction
      parameters:
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          schema: {type: integer}
      responses:
        '200':
          description: Deleted
  '/accounts':
    post:
      operationId: accounts.create
      tags: [accounts]
      summary: Create an account
      requestBody:
        $ref: '#/components/requestBodies/account'
      responses:
        '201':
          $ref: '#/components/responses/created'
    get:
      operationId: accounts.find_all
      tags: [accounts]
      summary: Returns transactions
      responses:
        '200':
          $ref: '#/components/responses/accounts'
  '/accounts/{accountId}':
    put:
      operationId: accounts.update
      tags: [accounts]
      summary: Updates an account
      parameters:
        - name: accountId
          in: path
          description: Id of the account
          required: true
          schema: {type: integer}
      responses:
        '200':
          description: Updated
      requestBody:
        $ref: '#/components/requestBodies/account'
  '/balances':
    get:
      operationId: balances.find_all
      tags: [balances]
      summary: |
        Sums for each account all amounts in transactions of the 
        specified time interval
      parameters:
        - name: after
          in: query
          description: Start of balance calculation
          schema: {type: string, format: date}
        - name: before
          in: query
          description: End of balance calculation
          schema: {type: string, format: date}
      responses:
        '200':
          $ref: '#/components/responses/balances'
components:
  schemas:
    RequestTransaction:
      type: object
      required: [date, name]
      properties:
        date: {type: string, format: date}
        name: {type: string, maxLength: 200, example: 'milk and bread'}
        entries:
          type: array
          items: 
            type: object
            required: [accountId, amount]
            properties:
              accountId: {type: integer}
              amount: {type: number}
              verified: {type: boolean}
      example: 
        date: '2020-01-01'
        name: 'milk and bread'
        entries:
          - accountId: 548814
            amount: 10.12
            verified: false
          - accountId: 982753
            amount: -10.12
            verified: false
    ResponseTransaction:
      type: object
      properties:
        id: {type: integer}
        date: {type: string, format: date}
        name: {type: string, maxLength: 200, example: 'milk and bread'}
        entries:
          type: array
          items: 
            type: object
            properties:
              accountId: {type: integer}
              amount: {type: number}
              verified: {type: boolean}
      example: 
        id: 619734
        date: '2020-01-01'
        name: 'milk and bread'
        entries:
          - accountId: 548814
            amount: 10.12
            verified: false
          - accountId: 982753
            amount: -10.12
            verified: false
    RequestAccount:
      type: object
      properties:
        name: {type: string, maxLength: 200}
        parentId: {type: integer}
        active: {type: boolean}
      example: 
        name: grocery
        parentId: 982753
        active: true
    ResponseAccount:
      type: object
      properties:
        id: {type: integer}
        name: {type: string, maxLength: 200}
        parentId: {type: integer}
        active: {type: boolean}
      example: 
        id: 571764
        name: grocery
        parentId: 982753
        active: true
    ResponseBalance:
      type: object
      properties:
        accountId: {type: integer}
        balance: {type: number}
    ResponseCreated:
      type: object
      properties:
        createdId: {type: integer}
  requestBodies:
    transaction:
      description: Transaction to save
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestTransaction'
    account:
      description: Account to save
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestAccount'
  responses:
    transactions:
      description: Loaded transactions
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResponseTransaction'
    transaction:
      description: Loaded transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseTransaction'
    accounts:
      description: Loaded accounts
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResponseAccount'
    balances:
      description: Calculated balances
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResponseBalance'
    created:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseCreated'